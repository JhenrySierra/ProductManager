<!-- views/realTimeProducts.handlebars -->
<h3>Real-Time Product List</h3>
<ul id="productList">
    {{#each products}}
    <li>{{this.title}} - {{this.price}}</li>
    {{/each}}
</ul>

<form id="productForm">
    <input type="text" id="productCode" placeholder="Product Code">
    <input type="text" id="productTitle" placeholder="Product Title">
    <input type="text" id="productDescription" placeholder="Product Description">
    <input type="number" id="productPrice" placeholder="Product Price">
    <input type="text" id="productThumbnail" placeholder="Product Thumbnail">
    <input type="number" id="productStock" placeholder="Product Stock">
    <button type="submit">Add Product</button>
</form>


<script src="/socket.io/socket.io.js"></script>
<script>
    
    
    const productForm = document.getElementById('productForm');
    productForm.addEventListener('submit', (event) => {
        event.preventDefault();

        // Get form values
        const productCode = document.getElementById('productCode').value;
        const productTitle = document.getElementById('productTitle').value;
        const productDescription = document.getElementById('productDescription').value;
        const productPrice = parseFloat(document.getElementById('productPrice').value);
        const productThumbnail = document.getElementById('productThumbnail').value;
        const productStock = parseInt(document.getElementById('productStock').value);

        // Create the product object
        const newProduct = {
            code: productCode,
            title: productTitle,
            description: productDescription,
            price: productPrice,
            thumbnail: productThumbnail,
            stock: productStock,
            id: productManager.lastProductId + 1
        };

        // Add the product using the productManager
        productManager.addProduct(newProduct);

        // Clear the form
        productForm.reset();
    });

</script>